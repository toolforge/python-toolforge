[tox]
min_version = 4.0
envlist =
    lint
    py311
    py310
    py39
    py38
    py37
    type
    pkg_meta
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {envname}
deps =
    pytest
    pytest-mock
commands =
    pytest tests/

[testenv:lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
base_python = py311
skip_install = true
deps =
    pre-commit>=3.2
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'print(r"hint: run {envbindir}{/}pre-commit install to add checks as pre-commit hook")'

[testenv:type]
description = run type check on code base
base_python = py311
deps =
    mypy
    pytest
    types-PyMySQL
    types-requests
commands =
    mypy src/toolforge
    mypy tests

[testenv:pkg_meta]
description = check that generated pacakges are valid
base_python = py311
skip_install = true
deps =
    build[virtualenv]>=0.10
    check-wheel-contents>=0.4
    twine>=4.0.2
commands =
    python3 -m build --outdir {envtmpdir} --sdist --wheel .
    twine check --strict {envtmpdir}{/}*
    check-wheel-contents {envtmpdir}

[flake8]
exclude = .tox
max_line_length = 120
dictionaries = en_US,python,technical
whitelist = .local-dictionary.txt
